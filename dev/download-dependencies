#!/bin/bash

if [ -z "$BASH_VERSION" ]
then
  echo "This script requires bash."
  exit 1
fi

set -o errexit -o nounset -o pipefail

function usage {
  echo "Usage: $(basename "$0") [-v] [-o PATH] [-?]"
  echo "  -v       verbose"
  echo "  -o PATH  path to the repository to save downloaded dependencies at (default: current directory)"
  echo "  -?       show this help message"
}

repository_path='.'
verbose=0
while [[ $# -gt 0 ]]
do
  case $1 in
    "-v")
      verbose=1
      shift
      ;;
    "-o")
      repository_path="$2"
      shift 2
      ;;
    "-?")
      usage
      exit 0
      ;;
    "-*")
      echo "Unknown option: $1" >&2
      echo "Show help with -?" >&2
      exit 2
      ;;
    "*")
      shift
      ;;
  esac
done

function log_verbose {
  if [ $verbose -eq 1 ]
  then
    echo "$@"
  fi
}

log_verbose download-dependencies

dependencies=$(cabal-plan topo --hide-builtin | grep -v ' ')

if [ $verbose -eq 1 ]
then
  echo dependencies:
  for d in $dependencies
  do
    echo -e "\t$d"
  done
fi

temp_dir=$(mktemp --directory --tmpdir haskell-airplane.download-dependencies.XXXXXX)
trap 'log_verbose removing temporary directory; rm -rf $temp_dir' EXIT
log_verbose created temporary directory: "$temp_dir"

pushd "$temp_dir"
if [ $verbose -eq 0 ]
then
  wget='wget --quiet'
else
  wget='wget --no-verbose'
fi
for d in $dependencies
do
  url=https://hackage.haskell.org/package/$d/$d.tar.gz
  $wget "$url"
done
popd

log_verbose copying repository
cp -r "$temp_dir"/* "$repository_path"
